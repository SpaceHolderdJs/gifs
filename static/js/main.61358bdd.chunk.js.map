{"version":3,"sources":["components/Gif.js","components/Trends.js","components/Text.js","components/Search.js","components/Category.js","components/Section.js","components/Main.js","components/Preview.js","components/LikeList.js","App.js","reportWebVitals.js","index.js"],"names":["Gif","gif","useContext","Context","dispatch","store","title","images","trending_datetime","id","user","className","style","background","original","url","ll","find","item","onClick","type","payload","Icon","fontSize","href","download","Trends","key","useState","gifsArray","setGifsArray","useEffect","fetch","then","response","json","data","console","log","length","map","Text","setGif","text","setText","loading","setLoading","onChange","e","target","value","q","Search","req","setReq","Category","categories","setCategories","currentCat","setCurrentCat","setValue","showAside","setShowAside","filter","cat","name","includes","lc","color","src","alt","Section","category","slice","Main","Preview","Date","avatar_url","display_name","profile_url","instagram_url","split","reverse","join","LikeList","createContext","reducer","action","tab","showLL","prevGif","App","useReducer","localStorage","getItem","JSON","parse","setItem","stringify","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61358bdd.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nconst Gif = ({ gif }) => {\r\n  const { dispatch, store } = useContext(Context);\r\n  const { title, trending_datetime, images, id, user } = gif;\r\n\r\n  return (\r\n    <div className=\"gif\" style={{ background: `url(${images.original.url})` }}>\r\n      <div className=\"content column centered\">\r\n        <h2>{title}</h2>\r\n        <div className=\"row centered\">\r\n          {store.ll.find((item) => item.id === id) ? (\r\n            <span\r\n              className=\"icon\"\r\n              onClick={() =>\r\n                dispatch({ type: \"REMOVE_FROM_LL\", payload: gif })\r\n              }>\r\n              <Icon fontSize=\"large\">favorite</Icon>\r\n            </span>\r\n          ) : (\r\n            <span\r\n              className=\"icon\"\r\n              onClick={() => dispatch({ type: \"ADD_TO_LL\", payload: gif })}>\r\n              <Icon fontSize=\"large\">favorite_border</Icon>\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"icon\"\r\n            onClick={() => dispatch({ type: \"ADD_PREV_GIF\", payload: gif })}>\r\n            <Icon fontSize=\"large\">info</Icon>\r\n          </span>\r\n          <a href={images.original.url} className=\"icon\" download>\r\n            <Icon fontSize=\"large\">download</Icon>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gif;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\n\r\nimport Gif from \"./Gif\";\r\n\r\nconst Trends = () => {\r\n  const { key } = useContext(Context);\r\n\r\n  const [gifsArray, setGifsArray] = useState([]);\r\n\r\n  const getGisf = () => {\r\n    fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${key}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setGifsArray(data.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGisf();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container column centered\">\r\n      <h1>Trends</h1>\r\n      <div className=\"wrapper row\">\r\n        {gifsArray.length > 0 ? (\r\n          gifsArray.map((gif) => <Gif gif={gif} />)\r\n        ) : (\r\n          <h1>Loading...</h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trends;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport Gif from \"./Gif\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nconst Text = () => {\r\n  const { key } = useContext(Context);\r\n\r\n  const getGifs = (q) => {\r\n    setLoading(true);\r\n    fetch(`https://api.giphy.com/v1/gifs/translate?api_key=${key}&s=${q}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        console.log(data);\r\n        setGif(data.data);\r\n      });\r\n  };\r\n\r\n  const [gif, setGif] = useState();\r\n  const [text, setText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container column centered text\">\r\n      <h1>Gif from Text</h1>\r\n      <div className=\"row centered\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setText(e.target.value)}\r\n          value={text}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setText(\"\");\r\n            getGifs(text);\r\n          }}>\r\n          Create\r\n        </button>\r\n      </div>\r\n      {loading && <h1>Loading...</h1>}\r\n      <div className=\"wrapper row\">{gif && <Gif gif={gif} />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nimport Gif from \"./Gif\";\r\n\r\nconst Search = () => {\r\n  const { key } = useContext(Context);\r\n\r\n  const [gifsArray, setGifsArray] = useState([]);\r\n  const [req, setReq] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getGifs = (q) => {\r\n    setLoading(true);\r\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${q}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        console.log(data);\r\n        setGifsArray(data.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\" container column centered\">\r\n      <h1>Search</h1>\r\n      <div className=\"row centered\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setReq(e.target.value)}\r\n          value={req}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setReq(\"\");\r\n            getGifs(req);\r\n          }}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      {loading && <h1>Loading...</h1>}\r\n      <div className=\"wrapper row\">\r\n        {gifsArray.length > 0 && gifsArray.map((gif) => <Gif gif={gif} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Gif from \"./Gif\";\r\n\r\nconst Category = () => {\r\n  const { store, dispatch, key } = useContext(Context);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [currentCat, setCurrentCat] = useState();\r\n  const [value, setValue] = useState();\r\n  const [gifsArray, setGifsArray] = useState([]);\r\n\r\n  const [showAside, setShowAside] = useState(true);\r\n\r\n  const getCategories = () => {\r\n    fetch(`https://api.giphy.com/v1/gifs/categories?api_key=${key}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        console.log(data);\r\n        setCategories(data.data);\r\n      });\r\n  };\r\n\r\n  const getGifs = (q) => {\r\n    if (q) {\r\n      setLoading(true);\r\n      fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${q}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setLoading(false);\r\n          console.log(data);\r\n          setGifsArray(data.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getGifs(currentCat);\r\n  }, [currentCat]);\r\n\r\n  return (\r\n    <div className=\"container column centered\">\r\n      {!showAside && (\r\n        <div className=\"show-side-btn-wrapper row centered\">\r\n          <button className=\"show-side-btn\" onClick={() => setShowAside(true)}>\r\n            <p>Categories</p>\r\n          </button>\r\n        </div>\r\n      )}\r\n      {!currentCat ? (\r\n        <h1>Select category</h1>\r\n      ) : (\r\n        <h1>Category: {currentCat && currentCat}</h1>\r\n      )}\r\n\r\n      <div className=\"row centered\">\r\n        {showAside && (\r\n          <aside className=\"column\">\r\n            <span className=\"icon-close\" onClick={() => setShowAside(false)}>\r\n              <Icon>close</Icon>\r\n            </span>\r\n            <div className=\"row centered inp-wrapper\">\r\n              <Icon>search</Icon>\r\n              <input type=\"text\" onChange={(e) => setValue(e.target.value)} />\r\n            </div>\r\n            {categories.length > 0 && value\r\n              ? categories\r\n                  .filter((cat) => cat.name.includes(value))\r\n                  .map((cat) => (\r\n                    <div className=\"row centered category-title\">\r\n                      <h3 onClick={() => setCurrentCat(cat.name)}>\r\n                        {cat.name}\r\n                      </h3>\r\n                      <div className=\"row centered\">\r\n                        {store.lc.find((item) => item === cat.name) ? (\r\n                          <span\r\n                            style={{ color: \"purple\" }}\r\n                            className=\"icon\"\r\n                            onClick={() =>\r\n                              dispatch({\r\n                                type: \"REMOVE_FROM_LC\",\r\n                                payload: cat.name,\r\n                              })\r\n                            }>\r\n                            <Icon>favorite</Icon>\r\n                          </span>\r\n                        ) : (\r\n                          <span\r\n                            className=\"icon\"\r\n                            onClick={() =>\r\n                              dispatch({ type: \"ADD_TO_LC\", payload: cat.name })\r\n                            }>\r\n                            <Icon>favorite</Icon>\r\n                          </span>\r\n                        )}\r\n\r\n                        <img src={cat.gif.images.original.url} alt=\"gif\" />\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n              : categories.map((cat) => (\r\n                  <div className=\"row centered category-title\">\r\n                    <h3 onClick={() => setCurrentCat(cat.name)}>{cat.name}</h3>\r\n                    <div className=\"row centered\">\r\n                      {store.lc.find((item) => item === cat.name) ? (\r\n                        <span\r\n                          style={{ color: \"purple\" }}\r\n                          className=\"icon\"\r\n                          onClick={() =>\r\n                            dispatch({\r\n                              type: \"REMOVE_FROM_LC\",\r\n                              payload: cat.name,\r\n                            })\r\n                          }>\r\n                          <Icon>favorite</Icon>\r\n                        </span>\r\n                      ) : (\r\n                        <span\r\n                          className=\"icon\"\r\n                          onClick={() =>\r\n                            dispatch({ type: \"ADD_TO_LC\", payload: cat.name })\r\n                          }>\r\n                          <Icon>favorite</Icon>\r\n                        </span>\r\n                      )}\r\n                      <img src={cat.gif.images.original.url} alt=\"gif\" />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n          </aside>\r\n        )}\r\n        <div className=\"wrapper row\">\r\n          {gifsArray.length > 0 && gifsArray.map((gif) => <Gif gif={gif} />)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Gif from \"./Gif\";\r\n\r\nconst Section = ({ category }) => {\r\n  const { key, dispatch, store } = useContext(Context);\r\n\r\n  const [gifsArray, setGifsArray] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getGifs = (q) => {\r\n    setLoading(true);\r\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${q}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        console.log(data);\r\n        setGifsArray(data.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGifs(category);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"column section\">\r\n      <div className=\"row centered header-wrapper\">\r\n        <h2>{category}</h2>\r\n        <span\r\n          className=\"icon\"\r\n          onClick={() =>\r\n            dispatch({ type: \"REMOVE_FROM_LC\", payload: category })\r\n          }>\r\n          <Icon>close</Icon>\r\n        </span>\r\n      </div>\r\n      <div className=\"row gif-wrapper\">\r\n        {loading && <h1>Loading...</h1>}\r\n        {gifsArray.length > 0 &&\r\n          gifsArray.slice(0, 7).map((gif) => <Gif gif={gif} />)}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nimport Section from \"./Section\";\r\n\r\nconst Main = () => {\r\n  const { store, dispatch } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"container column centered main\">\r\n      {store.lc?.length > 0 ? (\r\n        store.lc.map((cat) => <Section category={cat} />)\r\n      ) : (\r\n        <h1>No liked categories</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useContext } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nconst Preview = ({ gif }) => {\r\n  const { dispatch } = useContext(Context);\r\n  const { title, trending_datetime, images, id, user } = gif;\r\n\r\n  const date = new Date();\r\n  return (\r\n    <div className=\"column centered prev-wrapper\">\r\n      <div className=\"row centered preview\">\r\n        <img src={images.original.url} alt=\"\" className=\"gif-img\" />\r\n        <div className=\"column info\">\r\n          {user ? (\r\n            <>\r\n              <span\r\n                className=\"icon  icon-close\"\r\n                onClick={() => dispatch({ type: \"REMOVE_PREV_GIF\" })}>\r\n                <Icon fontSize=\"large\">close</Icon>\r\n              </span>\r\n              <div className=\"row centered\">\r\n                {user.avatar_url ? (\r\n                  <img src={user.avatar_url} alt=\"\" className=\"avatar\" />\r\n                ) : (\r\n                  <Icon fontSize=\"large\">person</Icon>\r\n                )}\r\n                <p>{user.display_name}</p>\r\n              </div>\r\n              <p>\r\n                Profile: <a href={user.profile_url}>Link</a>\r\n              </p>\r\n              <p>\r\n                Instagram: <a href={user.instagram_url}>Link</a>\r\n              </p>\r\n              <p>\r\n                Date of creation:{\" \"}\r\n                {trending_datetime.split(\" \")[0].split(\"-\").reverse().join(\".\")}\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span\r\n                className=\"icon icon-close\"\r\n                onClick={() => dispatch({ type: \"REMOVE_PREV_GIF\" })}>\r\n                <Icon fontSize=\"large\">close</Icon>\r\n              </span>\r\n              <div className=\"row centered\">\r\n                <h1>No user info</h1>\r\n                <Icon fontSize=\"large\">mood_bad</Icon>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Gif from \"./Gif\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nconst LikeList = () => {\r\n  const { store, dispatch } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"likeList\">\r\n      <div className=\"column\">\r\n        <span\r\n          className=\"icon-close\"\r\n          onClick={() => dispatch({ type: \"SHOW_LL\" })}>\r\n          <Icon>close</Icon>\r\n        </span>\r\n      </div>\r\n      <h1>LikeList</h1>\r\n      {store.ll?.length > 0 ? (\r\n        store.ll.map((item) => <Gif gif={item} />)\r\n      ) : (\r\n        <h1>No liked gifs yet</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikeList;\r\n","import { useReducer, createContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Trends from \"./components/Trends\";\r\nimport Text from \"./components/Text\";\r\nimport Search from \"./components/Search\";\r\nimport Category from \"./components/Category\";\r\nimport Main from \"./components/Main\";\r\n\r\nimport Preview from \"./components/Preview\";\r\n\r\nimport LikeList from \"./components/LikeList\";\r\n\r\nexport const Context = createContext(null);\r\n\r\nconst reducer = (store, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_TAB\":\r\n      return { ...store, tab: action.payload };\r\n\r\n    case \"SHOW_LL\":\r\n      return { ...store, showLL: !store.showLL };\r\n\r\n    case \"INIT_LL\":\r\n      return { ...store, ll: action.payload };\r\n\r\n    case \"ADD_TO_LL\":\r\n      return { ...store, ll: [...store.ll, action.payload] };\r\n\r\n    case \"REMOVE_FROM_LL\":\r\n      return {\r\n        ...store,\r\n        ll: store.ll.filter((item) => item.id !== action.payload.id),\r\n      };\r\n\r\n    case \"ADD_PREV_GIF\":\r\n      return { ...store, prevGif: action.payload };\r\n\r\n    case \"REMOVE_PREV_GIF\":\r\n      return { ...store, prevGif: null };\r\n\r\n    case \"INIT_LC\":\r\n      return { ...store, lc: action.payload };\r\n\r\n    case \"ADD_TO_LC\":\r\n      return { ...store, lc: [...store.lc, action.payload] };\r\n\r\n    case \"REMOVE_FROM_LC\":\r\n      return {\r\n        ...store,\r\n        lc: store.lc.filter((item) => item !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [store, dispatch] = useReducer(reducer, {\r\n    tab: \"main\",\r\n    showLL: false,\r\n    ll: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"INIT_LL\",\r\n      payload: localStorage.getItem(\"ll\")\r\n        ? JSON.parse(localStorage.getItem(\"ll\"))\r\n        : [],\r\n    });\r\n\r\n    dispatch({\r\n      type: \"INIT_LC\",\r\n      payload: localStorage.getItem(\"lc\")\r\n        ? JSON.parse(localStorage.getItem(\"lc\"))\r\n        : [],\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"ll\", JSON.stringify(store.ll));\r\n  }, [store.ll]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"lc\", JSON.stringify(store.lc));\r\n  }, [store.lc]);\r\n\r\n  return (\r\n    <div className=\"App column centered\">\r\n      <header className=\"row centered\">\r\n        <button\r\n          onClick={() => dispatch({ type: \"CHANGE_TAB\", payload: \"main\" })}>\r\n          Main\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch({ type: \"CHANGE_TAB\", payload: \"trends\" })}>\r\n          Trends\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch({ type: \"CHANGE_TAB\", payload: \"text\" })}>\r\n          Create text\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch({ type: \"CHANGE_TAB\", payload: \"search\" })}>\r\n          Search\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch({ type: \"CHANGE_TAB\", payload: \"category\" })}>\r\n          Category\r\n        </button>\r\n        <button onClick={() => dispatch({ type: \"SHOW_LL\" })}>LikeList</button>\r\n      </header>\r\n\r\n      <Context.Provider\r\n        value={{ dispatch, store, key: \"lEvYbXlyviIwbqeJQAT2NzLLrxgzKxeS\" }}>\r\n        {store.tab === \"main\" && <Main />}\r\n        {store.tab === \"trends\" && <Trends />}\r\n        {store.tab === \"text\" && <Text />}\r\n        {store.tab === \"search\" && <Search />}\r\n        {store.tab === \"category\" && <Category />}\r\n        {store.showLL && <LikeList />}\r\n        {store.prevGif && <Preview gif={store.prevGif} />}\r\n      </Context.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}